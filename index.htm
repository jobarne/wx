<!DOCTYPE html>
<html>
	<head>
		<title>Mosquitto Websockets</title>
		<script type="text/javascript" src="smoothie.js"></script>
		<script type="text/javascript" src="reconnecting-websocket.min.js"></script>
		<script src="mqttws31.js" type="text/javascript"></script>
		<script src="jquery.min.js" type="text/javascript"></script>
		<script src="config.js" type="text/javascript"></script>
		<script type="text/javascript">
		$(function() {
		
			var readings1 = new TimeSeries();
			var readings2 = new TimeSeries();

			var i=0;
			var chart = new SmoothieChart({
				grid:{millisPerLine:5000},
				millisPerPixel:100,
				interpolation:'bezier',
				minValue:10,
				maxValue:30
			});
			chart.addTimeSeries(readings1, { 
				strokeStyle: 'rgba(0, 255, 0, 0.6)',
				lineWidth: 3 
			});
			chart.addTimeSeries(readings2, { 
				strokeStyle: 'rgba(255, 0, 0, 0.6)',
				lineWidth: 3 
			});
			chart.streamTo(document.getElementById("chart"), 1000);
		
			var mqtt;

			mqtt = new Paho.MQTT.Client(host, port, path, client_id);
			var options = {
				timeout: 3,
				userName: username,
				password: password,
				useSSL: useTLS,
				cleanSession: cleansession,
				onSuccess: onConnect,
				onFailure: function (message) {
					console.log("Connection failed: " + message.errorMessage + " Retrying");
					setTimeout(MQTTconnect, reconnectTimeout);
				}
			};

			mqtt.onConnectionLost = onConnectionLost;
			mqtt.onMessageArrived = onMessageArrived;
			
			function onConnect() {
				console.log('Connected to ' + host + ':' + port + path);
				// Connection succeeded; subscribe to our topic
				mqtt.subscribe(topic, {qos: 0});
				document.body.style.backgroundColor = '#cfc';
			}

			function onConnectionLost(response) {
				console.log("connection lost: " + response.errorMessage + ". Reconnecting");
				setTimeout(MQTTconnect, reconnectTimeout);
				document.body.style.backgroundColor = null;
			};

			function onMessageArrived(message) {
				console.log(message);
				var topic = message.destinationName;
				var value = message.payloadString;
				new_time = new Date().getTime();
				if (message.destinationName=="test") {
					readings1.append(new_time, value);
				} else {
					readings2.append(new_time, value);
				}
				
			};
		
			console.log("host="+ host + ", port=" + port + ", path=" + path + ", TLS=" + useTLS + ", username=" + username + ", password=" + password);
			mqtt.connect(options);
		});
		</script>
	</head>
	<body>
		<h1>Mosquitto Websockets</h1>
		<canvas id="chart" width="800" height="400"></canvas>
	</body>
</html>